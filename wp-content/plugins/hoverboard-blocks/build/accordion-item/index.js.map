{"version":3,"file":"accordion-item/index.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACe,SAASE,iBAAT,OAIZ;EAAA,IAJuC;IACzCC,SADyC;IAEzCC,UAFyC;IAGzCC;EAHyC,CAIvC;EACF,MAAMC,UAAU,GAAGL,sEAAa,CAAC;IAAEE;EAAF,CAAD,CAAhC;EACA,OACC,kIACC,yEAASG,UAAT,EACC,kEAAC,6DAAD;IACC,OAAO,EAAC,IADT;IAEC,SAAS,EAAEH,SAFZ;IAGC,KAAK,EAAEC,UAAU,CAACG,OAHnB;IAIC,WAAW,EAAC,UAJb;IAKC,QAAQ,EAAGA,OAAD,IAAaF,aAAa,CAAC;MAAEE;IAAF,CAAD;EALrC,EADD,EAQC,kEAAC,6DAAD;IACC,OAAO,EAAC,GADT;IAEC,SAAS,EAAEJ,SAFZ;IAGC,KAAK,EAAEC,UAAU,CAACI,OAHnB;IAIC,WAAW,EAAC,UAJb;IAKC,QAAQ,EAAGA,OAAD,IAAaH,aAAa,CAAC;MAAEG;IAAF,CAAD;EALrC,EARD,CADD,CADD;AAoBA;;;;;;;;;;;;;;;;;;;;;;AC7CD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACe,SAASC,IAAT,OAA8B;EAAA,IAAhB;IAAEL;EAAF,CAAgB;EAC5C,MAAME,UAAU,GAAGL,uEAAA,EAAnB;EACA,OACC,wJAASK,UAAT;IAAqB,SAAS,EAAC;EAA/B,IACC;IAAI,SAAS,EAAC;EAAd,GACC,kEAAC,qEAAD;IAAkB,KAAK,EAAEF,UAAU,CAACG;EAApC,EADD,CADD,EAIC;IAAK,SAAS,EAAC;EAAf,GACC,kEAAC,qEAAD;IAAkB,KAAK,EAAEH,UAAU,CAACI;EAApC,EADD,CAJD,CADD;AAUA;;;;;;;;;;AC/BD;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAe;AACf;AACA,oBAAoB,sBAAsB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;UCfA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACAE,oEAAiB,CAACE,6CAAD,EAAgB;EAChCR,UAAU,EAAEQ,mDADoB;EAEhCD,IAFgC;EAGhCF,IAAIA,+CAAAA;AAH4B,CAAhB,CAAjB,C","sources":["webpack://hoverboard-blocks/./src/accordion-item/edit.js","webpack://hoverboard-blocks/./src/accordion-item/save.js","webpack://hoverboard-blocks/external window [\"wp\",\"blockEditor\"]","webpack://hoverboard-blocks/external window [\"wp\",\"blocks\"]","webpack://hoverboard-blocks/external window [\"wp\",\"element\"]","webpack://hoverboard-blocks/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://hoverboard-blocks/webpack/bootstrap","webpack://hoverboard-blocks/webpack/runtime/compat get default export","webpack://hoverboard-blocks/webpack/runtime/define property getters","webpack://hoverboard-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://hoverboard-blocks/webpack/runtime/make namespace object","webpack://hoverboard-blocks/./src/accordion-item/index.js"],"sourcesContent":["/**\n * WordPress components that create the necessary UI elements for the block\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-components/\n */\nimport { RichText, useBlockProps } from \"@wordpress/block-editor\";\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n *\n * @param {Object}   props               Properties passed to the function.\n * @param {Object}   props.attributes    Available block attributes.\n * @param {Function} props.setAttributes Function that updates individual attributes.\n *\n * @return {WPElement} Element to render.\n */\nexport default function AccordionItemEdit({\n\tclassName,\n\tattributes,\n\tsetAttributes,\n}) {\n\tconst blockProps = useBlockProps({ className });\n\treturn (\n\t\t<>\n\t\t\t<div {...blockProps}>\n\t\t\t\t<RichText\n\t\t\t\t\ttagName=\"h2\"\n\t\t\t\t\tclassName={className}\n\t\t\t\t\tvalue={attributes.heading}\n\t\t\t\t\tplaceholder=\"Add text\"\n\t\t\t\t\tonChange={(heading) => setAttributes({ heading })}\n\t\t\t\t/>\n\t\t\t\t<RichText\n\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\tclassName={className}\n\t\t\t\t\tvalue={attributes.content}\n\t\t\t\t\tplaceholder=\"Add text\"\n\t\t\t\t\tonChange={(content) => setAttributes({ content })}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n","/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-block-editor/#useBlockProps\n */\nimport { RichText, useBlockProps } from \"@wordpress/block-editor\";\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n *\n * @param {Object} props            Properties passed to the function.\n * @param {Object} props.attributes Available block attributes.\n * @return {WPElement} Element to render.\n */\nexport default function save({ attributes }) {\n\tconst blockProps = useBlockProps.save();\n\treturn (\n\t\t<div {...blockProps} className=\"accordion__item\">\n\t\t\t<h2 className=\"accordion__heading\">\n\t\t\t\t<RichText.Content value={attributes.heading} />\n\t\t\t</h2>\n\t\t\t<div className=\"accordion__content\">\n\t\t\t\t<RichText.Content value={attributes.content} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"element\"];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nimport { registerBlockType } from \"@wordpress/blocks\";\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor. All other files\n * get applied to the editor only.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport edit from \"./edit\";\nimport save from \"./save\";\nimport metadata from \"./block.json\";\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nregisterBlockType(metadata.name, {\n\tattributes: metadata.attributes,\n\tedit,\n\tsave,\n});\n"],"names":["RichText","useBlockProps","AccordionItemEdit","className","attributes","setAttributes","blockProps","heading","content","save","registerBlockType","edit","metadata","name"],"sourceRoot":""}